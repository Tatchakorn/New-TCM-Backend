from django.db import models
from django.utils import timezone
from users.models import Employee, EmployeeWorkSchedule


class Patient(models.Model):
    '''
    PatientID VARCHAR(50) <pk> auto-generated by Django
    PatientName VARCHAR(50)
    PatientGender CHAR(10)
    PatientBirthday DATE
    PatientNHICardNum VARCHAR(20)
    PatientIdNum VARCHAR(20)
    PatientPhone VARCHAR(20)
    PatientAddress VARCHAR(100)
    PatientHeight FLOAT8
    PatientWeight FLOAT8
    PatientBloodType CHAR(5)
    PatientMedicalHistory VARCHAR(100)
    PatientPhysique VARCHAR(100)
    PatientBodyFitness VARCHAR(100)
    PatientEmergencyContactName VARCHAR(10)
    PatientEmergencyContactPhone VARCHAR(10)
    PatientEmergencyContactRelationship VARCHAR(10)
    PatientJob VARCHAR(10)
    PatientEduLevel VARCHAR(10)
    PatientMarriage VARCHAR(10)
    PatientNotes TEXT
    '''
    
    class Meta:
        db_table = 'Patient'
        verbose_name_plural = 'Patients'
        ordering = ['-name', '-birthday',]

    class Gender(models.TextChoices):
        MALE = 'M', ('男')
        FEMALE = 'F', ('女')
    
    name = models.CharField(max_length=50)
    gender =  models.CharField(
        max_length=1,
        choices=Gender.choices,
        default=Gender.MALE
    )
    birthday = models.DateField(auto_now=False, auto_now_add=False)
    nhi_card_num = models.CharField(max_length=20, blank=True, null=True)
    id_num = models.CharField(max_length=20, blank=True, null=True)
    phone_number = models.CharField(max_length=20, blank=True, null=True)
    address = models.CharField(max_length=100, blank=True, null=True)
    height = models.DecimalField(max_digits=6, decimal_places=3)
    weight = models.DecimalField(max_digits=6, decimal_places=3)
    blood_type = models.CharField(max_length=20, blank=True, null=True)
    med_history = models.CharField(max_length=100, blank=True, null=True)
    physique = models.CharField(max_length=100, blank=True, null=True)
    body_fitness = models.CharField(max_length=100, blank=True, null=True)
    emergency_contact_name = models.CharField(max_length=10, blank=True, null=True)
    emergency_contact_phone = models.CharField(max_length=10, blank=True, null=True)
    emergency_contact_rel = models.CharField(max_length=10, blank=True, null=True)
    job = models.CharField(max_length=10, blank=True, null=True)
    edu_level = models.CharField(max_length=10, blank=True, null=True)
    marriage = models.CharField(max_length=10, blank=True, null=True)
    note = models.TextField(blank=True, null=True)

class DiagnosisRecord(models.Model):
    '''
    DiagnosisRecordID VARCHAR(50) <pk> auto-generated by Django
    PatientRegisterRecordID VARCHAR(50) <fk>
    EmployeeWorkScheduleID VARCHAR(50) <fk>
    PatientID VARCHAR(50) <fk>
    EmployeeID VARCHAR(50) <fk>
    MainComplaint TEXT
    Pulse TEXT
    DiseaseICDCode VARCHAR(50)
    CoDiseaseICDCode VARCHAR(50)
    CoDiseaseICDCode2 VARCHAR(50)
    MedicineWay TEXT
    Decoctions **
    MedicinePackAmount FLOAT8
    ** MedicineDay INT8
    MedicineTotalAmount FLOAT8
    DiagnosisRecordTime TIMESTAMP
    '''

    class Meta:
        db_table = 'DiagnosisRecord'
        ordering = ['-record_time',]

    employee_work_schedule_id = models.ForeignKey(
        EmployeeWorkSchedule,
        related_name='diagnosis_rec',
        on_delete=models.CASCADE
        )
    patient_id = models.ForeignKey(
        Patient,
        related_name='diagnosis_rec',
        on_delete=models.CASCADE)
    employee_id = models.ForeignKey(
        Employee,
        related_name='diagnosis_rec',
        on_delete=models.CASCADE)
    main_complaint = models.TextField(blank=True, null=True)
    pulse = models.TextField(blank=True, null=True)
    disease_name = models.CharField(max_length=100, blank=True, null=True, default=None)
    disease_icd_code = models.CharField(max_length=50, blank=True, null=True)
    codisease_icd_code = models.CharField(max_length=50, blank=True, null=True)
    codisease_icd_code_2 = models.CharField(max_length=50, blank=True, null=True)
    medicine_way = models.TextField(blank=True, null=True)
    med_pack_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0)
    med_day = models.SmallIntegerField(blank=True, null=True)
    med_total_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0)
    decoction_pack_amout = models.DecimalField(max_digits=10, decimal_places=2, default=0)
    decoction_cook_way = models.TextField(blank=True, null=True)
    decoction_way = models.TextField(blank=True, null=True)
    decoction_total_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0)
    record_time = models.DateTimeField(auto_now_add=True)

class PatientRegisterRecord(models.Model):
    '''
    PatientRegisterRecordID VARCHAR(50) <pk> auto-generated by Django
    PatientID VARCHAR(50) <fk>
    EmployeeWorkScheduleId <fk>
    DiagnosisRecordId <fk>
    PatientRegisterRecordTime DATE
    PatientRegisterPayment FLOAT8
    '''

    class Meta:
        db_table = 'PatientRegisterRecord'
        ordering = ['-record_time',]
    
    patient_id = models.ForeignKey(
        Patient,
        related_name='patient_register_rec',
        on_delete=models.CASCADE)
    employee_work_schedule_id = models.ForeignKey(
        EmployeeWorkSchedule,
        on_delete=models.CASCADE, 
        default=None,
        null=True)
    diagnosis_record_id = models.ForeignKey(
        DiagnosisRecord,
        on_delete=models.CASCADE,
        default=None,
        null=True)
    record_time = models.DateTimeField(auto_now_add=True)
    payment = models.DecimalField(max_digits=10, decimal_places=2, default=0)
    register_sequence = models.IntegerField(default=0)


class EyeImage(models.Model):
    '''
    - EyeImageID VARCHAR(50) <pk> auto-generated by Django
    ** PatientID VARCHAR(50) <fk>
    - DiagnosisRecord VARCHAR(50)
    - EyeImage bytea
    - EyeImageUploadDate DATE
    '''

    class Meta: 
        db_table = 'EyeImage'
        verbose_name_plural = 'EyeImages'
        ordering = ['-upload_date']
    
    # diagnosis_record_id = models.ForeignKey(
    #     DiagnosisRecord,
    #     related_name='diagnosisRecordId',
    #     on_delete=models.CASCADE)
    patient_id = models.ForeignKey(
        Patient,
        related_name='patientId',
        on_delete=models.CASCADE)
    image = models.ImageField(upload_to='images/eye/%Y/%m', null=True)
    upload_date = models.DateTimeField(default=timezone.now)
    description = models.CharField(max_length=200, blank=True, null=True)


class TongueImage(models.Model):
    '''
    - TongueImageID VARCHAR(50) <pk> auto-generated by Django
    ** PatientID VARCHAR(50) <fk>'
    - DiagnosisRecordID VARCHAR(50) <fk>
    - TongueImage bytea
    - TongueImageUploadDate DATE
    '''

    class Meta:
        db_table = 'TongueImage'
        verbose_name_plural = 'TongueImages'
        ordering = ['-upload_date']

    # diagnosis_record_id = models.ForeignKey(
    #     DiagnosisRecord,
    #     related_name='tongue_img',
    #     on_delete=models.CASCADE)
    patient_id = models.ForeignKey(
        Patient,
        related_name='tongue_img',
        on_delete=models.CASCADE)
    image = models.ImageField(upload_to='images/tongue/%Y/%m', null=True)
    upload_date = models.DateTimeField(default=timezone.now)
    description = models.CharField(max_length=200, blank=True, null=True)


class OtherMedia(models.Model):
    '''
    type, patientID, path, upload timestamp, description,
    '''
    
    class Meta:
        db_table = 'OtherMedia'
        verbose_name_plural = 'OtherMedia'
    
    patient_id = models.ForeignKey(
        Patient,
        related_name='other_media',
        on_delete=models.CASCADE)
    upload_date = models.DateTimeField(default=timezone.now)
    file = models.FileField(upload_to='videos/%Y/%m')
    description = models.CharField(max_length=200, blank=True, null=True)